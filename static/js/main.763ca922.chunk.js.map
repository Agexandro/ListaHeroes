{"version":3,"sources":["HeroInfo.js","App.js","reportWebVitals.js","index.js"],"names":["Info","name","powerStats","biography","image","className","src","combat","durability","intelligence","power","speed","strength","App","useState","heroes","setHero","search","searchheroes","query","setQuery","URL","a","fetch","response","json","data","results","useEffect","getHero","getSearch","e","preventDefault","updateSearch","target","value","undefined","onSubmit","placeholder","type","onChange","autoFocus","map","hero","powerstats","url","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQA4BeA,MAzBf,YAAuD,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,MACzC,OACI,sBAAKC,UAAU,OAAf,UACI,6BAAKJ,IACL,qBAAKK,IAAKF,IACV,qBAAKC,UAAU,QAAf,SACI,+BACI,0CAAaH,EAAWK,UACxB,8CAAiBL,EAAWM,cAC5B,gDAAmBN,EAAWO,gBAC9B,yCAAYP,EAAWQ,SACvB,yCAAYR,EAAWS,SACvB,4CAAeT,EAAWU,iBAGlC,qBAAKP,UAAU,MAAf,SACI,+BACI,4CAAeF,EAAU,gBACzB,6CAAgBA,EAAU,0BC2C/BU,MA5Df,WACE,IACA,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA+BF,mBAAS,IAAxC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,UAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAG,+CALK,kBAKL,mBAA2DF,GANvD,4CAiBb,8BAAAG,EAAA,sEACyBC,MAAMF,GAD/B,cACQG,EADR,gBAEqBA,EAASC,OAF9B,OAEQC,EAFR,OAGEV,EAAQU,EAAKC,SAHf,4CAjBa,sBAUbC,qBAAU,WACE,IAAPT,GAXQ,mCAYTU,KAED,CAACV,IASJ,IAAMW,EAAY,SAAAC,GAChBA,EAAEC,iBACFZ,EAASH,IAGLgB,EAAe,SAAAF,GACnBb,EAAaa,EAAEG,OAAOC,QAGxB,YAAcC,GAAVrB,EAGA,sBAAKV,UAAU,UAAf,UACE,uBAAMgC,SAAUP,EAAWzB,UAAU,cAArC,UACE,uBAAOiC,YAAY,YAAYC,KAAK,OAAOlC,UAAU,aAAa8B,MAAOlB,EAAQuB,SAAUP,EAAcQ,WAAS,IAClH,wBAAQpC,UAAU,gBAAgBkC,KAAK,SAAvC,mBAEF,qBAAKlC,UAAU,YAAf,SAEIU,EAAO2B,KAAI,SAAAC,GAAI,OACb,cAAC,EAAD,CAAM1C,KAAM0C,EAAK1C,KAAMC,WAAYyC,EAAKC,WAAYzC,UAAWwC,EAAKxC,UAAWC,MAAOuC,EAAKvC,MAAMyC,cAQrG,uBAAMR,SAAUP,EAAWzB,UAAU,cAArC,UACA,uBAAOiC,YAAY,YAAYC,KAAK,OAAOlC,UAAU,aAAa8B,MAAOlB,EAAQuB,SAAUP,IAC3F,wBAAQ5B,UAAU,gBAAgBkC,KAAK,SAAvC,gBACA,2DC9CKO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.763ca922.chunk.js","sourcesContent":["import React from \"react\";\nimport './heroStyle.css';\n\nfunction Info({ name, powerStats, biography, image }) {\n    return (\n        <div className=\"info\">\n            <h1>{name}</h1>\n            <img src={image}/>\n            <div className=\"stats\">\n                <ul>\n                    <li>Combat: {powerStats.combat}</li>\n                    <li>Durability: {powerStats.durability}</li>\n                    <li>Intelligence: {powerStats.intelligence}</li>\n                    <li>Power: {powerStats.power}</li>\n                    <li>Speed: {powerStats.speed}</li>\n                    <li>Strength: {powerStats.strength}</li>\n                </ul>\n            </div>\n            <div className=\"bio\">\n                <ul>\n                    <li>Fullname: {biography[\"full-name\"]}</li>\n                    <li>Alteregos: {biography[\"alter-egos\"]}</li>\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default Info;","import React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport Info from \"./HeroInfo\";\n\nfunction App() {\n  const TOKEN = '228463595783333';\n  const [heroes, setHero] = useState([]);\n  const [search, searchheroes] = useState(\"\");\n  const [query, setQuery] = useState(\"Batman\");\n\n  const URL = `https://www.superheroapi.com/api.php/${TOKEN}/search/${query}`;\n\n\n  //Evita que se repita la carga de datos\n  useEffect(() => {\n    if(query!=\"\"){\n      getHero();\n    }\n  }, [query]);\n\n  //Toma la lista de los heroes\n  async function getHero() {\n    const response = await fetch(URL);\n    const data = await response.json();\n    setHero(data.results);\n  }\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n  }\n\n  const updateSearch = e => {\n    searchheroes(e.target.value);\n  }\n\n  if (heroes != undefined) {\n\n    return (\n      <div className=\"content\">\n        <form onSubmit={getSearch} className=\"search-form\">\n          <input placeholder=\"Search...\" type=\"text\" className=\"search-bar\" value={search} onChange={updateSearch} autoFocus/>\n          <button className=\"search-button\" type=\"submit\">Go</button>\n        </form>\n        <div className=\"container\">\n          {\n            heroes.map(hero => (\n              <Info name={hero.name} powerStats={hero.powerstats} biography={hero.biography} image={hero.image.url} />\n            ))\n          }\n      </div>\n      </div>\n    );\n  } else {\n    return (\n          <form onSubmit={getSearch} className=\"search-form\">\n          <input placeholder=\"Search...\" type=\"text\" className=\"search-bar\" value={search} onChange={updateSearch}/>\n          <button className=\"search-button\" type=\"submit\">Go</button>\n          <div>Super Hero not found</div>\n        </form>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}